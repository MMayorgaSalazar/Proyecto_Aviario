/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Consultas_modelo.aviario_main;
import Consultas_modelo.carga_datos;
import Consultas_modelo.carga_main;
//import Vista.Registrar_Ave;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;


public final class Interfaz extends javax.swing.JFrame {
    carga_datos carga = new carga_datos();
    carga_main cm = new carga_main();
    int total = cm.contarAves();
    DefaultTableModel modelo_p;
    DefaultTableModel modelo_h;

    //Definimos un temporizador para que actulice los datos que mostrara
    Timer timer;
    
    //Definimos ultimoID para usarlo junto al timer
    private int ultimoID = -1;
    
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        ListarCarga();
        ListarCarga_H();
        actualizarContador();
        //Temporizado que permite actualizar la tabla en timepo real (1s)
        timer = new Timer(5000, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                int nuevoID = ultimoID();
                if (nuevoID != ultimoID){
                    ultimoID = nuevoID;
                }
                ListarCarga();
                ListarCarga_H();
                actualizarContador();
            }
        });
        timer.start();
    }
        //Busca el ultmo ID de la tabla
        public int ultimoID() {
        int id = -1;
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aviario?serverTime=UTC", "root", "");
            PreparedStatement pst = con.prepareStatement("SELECT MAX(ID) AS maxID FROM ave");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                id = rs.getInt("maxID");
            }
            con.close();
        } catch (SQLException e) {
            //e.printStackTrace();
        }
        return id;
        }
        public void actualizarContador() {
            carga_main carga = new carga_main();
            int total = carga.contarAves();
            Count.setText("Total aves: " + total);
        }

    
    //Carga de datos almacenados en la BD para ingresarlos a la tabla Padres
    public void ListarCarga(){
        List<carga_datos> Listarcarga = cm.carga_datos();
        
        modelo_p = (DefaultTableModel) Registro_P.getModel();
        modelo_p.setRowCount(0);
        Object[] ob = new Object[8];
        for (int i = 0; i<Listarcarga.size(); i++){
            ob[0] = Listarcarga.get(i).getId();
            ob[1] = Listarcarga.get(i).getJaula();
            ob[2] = Listarcarga.get(i).getNro();
            ob[3] = Listarcarga.get(i).getEspecie();
            ob[4] = Listarcarga.get(i).getF_nacimiento();
            ob[5] = Listarcarga.get(i).getClase();
            ob[6] = Listarcarga.get(i).getF_fallecimiento();
            ob[7] = Listarcarga.get(i).getCausa();
            modelo_p.addRow(ob);
            
        }
        Registro_P.setModel(modelo_p);  
    }

    
        //Carga de datos almacenados en la BD para ingresarlos a la tabla Hijos
    public void ListarCarga_H(){
        List<carga_datos> Listarcarga_h = cm.carga_datos_H();
        
        modelo_h = (DefaultTableModel) Registro_H.getModel();
        modelo_h.setRowCount(0);
        Object[] ob = new Object[8];
        for (int i = 0; i<Listarcarga_h.size(); i++){
            ob[0] = Listarcarga_h.get(i).getId();
            ob[1] = Listarcarga_h.get(i).getJaula();
            ob[2] = Listarcarga_h.get(i).getNro();
            ob[3] = Listarcarga_h.get(i).getEspecie();
            ob[4] = Listarcarga_h.get(i).getF_nacimiento();
            ob[5] = Listarcarga_h.get(i).getClase();
            ob[6] = Listarcarga_h.get(i).getF_fallecimiento();
            ob[7] = Listarcarga_h.get(i).getCausa();
            modelo_h.addRow(ob);
            
        }
        Registro_H.setModel(modelo_h);  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        Aniadir = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        TabbedPanel = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        Registro_P = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Registro_H = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Registro_V = new javax.swing.JTable();
        Count = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Aniadir.setText("Registrar Ave");
        Aniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AniadirActionPerformed(evt);
            }
        });

        jButton2.setText("Registrar Venta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Exportar Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Editar Ave");

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Registro_P.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "JAULA", "NRO AVE", "ESPECIE", "FECHA NACIMIENTO", "CLASE", "FECHA FALLECIMIENTO", "CAUSA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Registro_P.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Registro_PMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Registro_P);
        if (Registro_P.getColumnModel().getColumnCount() > 0) {
            Registro_P.getColumnModel().getColumn(0).setResizable(false);
            Registro_P.getColumnModel().getColumn(1).setResizable(false);
            Registro_P.getColumnModel().getColumn(2).setResizable(false);
            Registro_P.getColumnModel().getColumn(3).setResizable(false);
            Registro_P.getColumnModel().getColumn(4).setResizable(false);
            Registro_P.getColumnModel().getColumn(5).setResizable(false);
            Registro_P.getColumnModel().getColumn(6).setResizable(false);
            Registro_P.getColumnModel().getColumn(7).setResizable(false);
        }

        TabbedPanel.addTab("Padres", jScrollPane3);

        Registro_H.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "JAULA", "NRO AVE", "ESPECIE", "FECHA NACIMIENTO", "CLASE", "FECHA FALLECIMIENTO", "CAUSA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Registro_H.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Registro_HMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Registro_H);
        if (Registro_H.getColumnModel().getColumnCount() > 0) {
            Registro_H.getColumnModel().getColumn(0).setResizable(false);
            Registro_H.getColumnModel().getColumn(1).setResizable(false);
            Registro_H.getColumnModel().getColumn(2).setResizable(false);
            Registro_H.getColumnModel().getColumn(3).setResizable(false);
            Registro_H.getColumnModel().getColumn(4).setResizable(false);
            Registro_H.getColumnModel().getColumn(5).setResizable(false);
            Registro_H.getColumnModel().getColumn(6).setResizable(false);
            Registro_H.getColumnModel().getColumn(7).setResizable(false);
        }

        TabbedPanel.addTab("Crias", jScrollPane1);

        Registro_V.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NRO FOLIO", "FECHA_VENTA", "COMPRADOR", "CANTIDAD_AVES", "DOCUMENTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Registro_V);
        if (Registro_V.getColumnModel().getColumnCount() > 0) {
            Registro_V.getColumnModel().getColumn(0).setResizable(false);
            Registro_V.getColumnModel().getColumn(1).setResizable(false);
            Registro_V.getColumnModel().getColumn(2).setResizable(false);
            Registro_V.getColumnModel().getColumn(3).setResizable(false);
            Registro_V.getColumnModel().getColumn(4).setResizable(false);
        }

        TabbedPanel.addTab("Ventas", jScrollPane2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Aniadir)
                .addGap(45, 45, 45)
                .addComponent(jButton2)
                .addGap(76, 76, 76)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(48, 48, 48)
                .addComponent(Eliminar)
                .addGap(37, 37, 37))
            .addComponent(TabbedPanel)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Count, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aniadir)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(Eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Count, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void AniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AniadirActionPerformed
        Registrar_Ave registrar = new Registrar_Ave();
        registrar.setVisible(true);            
        registrar.setLocationRelativeTo(null); 
    }//GEN-LAST:event_AniadirActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Documento doc = new Documento();
        doc.setVisible(true);            
        doc.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
    //definicion de la importacion JTable que nos permitira identificar la tabla en la que estamos trabajando
    JTable tablaActual;

    // Detectar la pestaña activa
    int pestañaSeleccionada = TabbedPanel.getSelectedIndex();
    if (pestañaSeleccionada == 0) { 
        tablaActual = Registro_P;
    } else if (pestañaSeleccionada == 1) { // 1 = Crias
        tablaActual = Registro_H;
    } else {
        JOptionPane.showMessageDialog(null, "No hay tabla seleccionada para eliminar.");
        return;
    }

    int fila = tablaActual.getSelectedRow();

    if (fila == -1) {
        JOptionPane.showMessageDialog(null, "Debes seleccionar una fila primero.");
        return;
    }

    int id = Integer.parseInt(tablaActual.getValueAt(fila, 0).toString());

    int confirm = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar este registro?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        aviario_main aviario = new aviario_main();
        boolean eliminado = aviario.Eliminar(id);

        if (eliminado) {
            DefaultTableModel model = (DefaultTableModel) tablaActual.getModel();
            model.removeRow(fila);
            JOptionPane.showMessageDialog(null, "Registro eliminado correctamente.");
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar el registro.");
        }
    }
    }//GEN-LAST:event_EliminarActionPerformed

    private void Registro_PMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Registro_PMouseClicked
        // TODO add your handling code here:
        int Fila_p = Registro_P.getSelectedRow();
        for (int i = 0; i < Registro_P.getColumnCount(); i++){
            System.out.println("Columna " + i + ": " + Registro_P.getValueAt(Fila_p, i));
        }
    }//GEN-LAST:event_Registro_PMouseClicked

    private void Registro_HMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Registro_HMouseClicked
        // TODO add your handling code here:
        int Fila_h = Registro_H.getSelectedRow();
        for (int i = 0; i < Registro_H.getColumnCount(); i++){
            System.out.println("Columna " + i + ": " + Registro_H.getValueAt(Fila_h, i));
        }
    }//GEN-LAST:event_Registro_HMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aniadir;
    private javax.swing.JLabel Count;
    private javax.swing.JButton Eliminar;
    private javax.swing.JTable Registro_H;
    private javax.swing.JTable Registro_P;
    private javax.swing.JTable Registro_V;
    private javax.swing.JTabbedPane TabbedPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
